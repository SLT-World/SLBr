<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:WinUI="clr-namespace:WinUI"
                    x:Class="SLBr.WinUIStyleDictionary">
    <SolidColorBrush x:Key="BorderBrush" Color="{DynamicResource BorderBrushColor}"/>
    <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource PrimaryBrushColor}"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{DynamicResource SecondaryBrushColor}"/>
    <SolidColorBrush x:Key="GrayBrush" Color="{DynamicResource GrayBrushColor}"/>
    <SolidColorBrush x:Key="FontBrush" Color="{DynamicResource FontBrushColor}"/>
    <SolidColorBrush x:Key="IndicatorBrush" Color="{DynamicResource IndicatorBrushColor}"/>

    <!--<Color x:Key="BorderBrushColor">Gainsboro</Color>
    <Color x:Key="PrimaryBrushColor">White</Color>
    <Color x:Key="GrayBrushColor">Gray</Color>
    <Color x:Key="SecondaryBrushColor">WhiteSmoke</Color>
    <Color x:Key="FontBrushColor">Black</Color>
    <Color x:Key="IndicatorBrushColor">#3399FF</Color>-->

    <Color x:Key="BorderBrushColor">#36393F</Color>
    <Color x:Key="PrimaryBrushColor">#202225</Color>
    <Color x:Key="GrayBrushColor">Gainsboro</Color>
    <Color x:Key="SecondaryBrushColor">#2F3136</Color>
    <Color x:Key="FontBrushColor">White</Color>
    <Color x:Key="IndicatorBrushColor">#3399FF</Color>

    <!--<Color x:Key="BorderBrushColor">#2B2237</Color>
    <Color x:Key="PrimaryBrushColor">#191025</Color>
    <Color x:Key="GrayBrushColor">Gainsboro</Color>
    <Color x:Key="SecondaryBrushColor">#251C31</Color>
    <Color x:Key="FontBrushColor">White</Color>
    <Color x:Key="IndicatorBrushColor">#934CFE</Color>-->

    <Style TargetType="{x:Type Paragraph}">
        <Setter Property="Margin" Value="0"/>
    </Style>
    
    <Style TargetType="Hyperlink">
        <Setter Property="Foreground" Value="{DynamicResource IndicatorBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Content" Value=""/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border x:Name="ToggleBorder" CornerRadius="12.5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Border Opacity="0" x:Name="ToggleBorderChecked" CornerRadius="12.5" Background="{DynamicResource IndicatorBrush}" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Border CornerRadius="12.5" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent">
                            <Path x:Name="path">
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="{DynamicResource PrimaryBrushColor}"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                                <Path.Data>
                                    <GeometryGroup>
                                        <GeometryGroup.Children>
                                            <EllipseGeometry Center="11.5,11.5" RadiusX="9" RadiusY="9"/>
                                        </GeometryGroup.Children>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--<EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard Storyboard="{StaticResource OnChecked}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard Storyboard="{StaticResource OnUnchecked}"/>
                        </EventTrigger>-->
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
                                            <EasingThicknessKeyFrame KeyTime="00:00:0.25" Value="25,0,0,0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="ToggleBorderChecked" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
                                            <EasingThicknessKeyFrame KeyTime="00:00:0.25" Value="0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="ToggleBorderChecked" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--<Setter Property="Background" Value="{DynamicResource IndicatorBrush}"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="path" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="{DynamicResource GrayBrushColor}"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="path" Property="Data">
                                <Setter.Value>
                                    <GeometryGroup>
                                        <GeometryGroup.Children>
                                            <EllipseGeometry Center="11.5,11.5" RadiusX="9" RadiusY="9"/>
                                        </GeometryGroup.Children>
                                    </GeometryGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToggleBorderChecked" Property="BorderThickness" Value="1"/>
                            <Setter TargetName="ToggleBorderChecked" Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                            <Setter TargetName="path" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="{DynamicResource BorderBrushColor}"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualStyle}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Content" Value=""/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="{TemplateBinding Height}" Height="{TemplateBinding Height}">
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="5"/>
                                <Border Opacity="0" x:Name="IndicatorBorder" BorderThickness="0" Background="{DynamicResource IndicatorBrush}" CornerRadius="5"/>
                                <TextBlock Opacity="0" x:Name="Checkmark" Padding="0,0,0,0" FontWeight="UltraBold" FontSize="14" TextAlignment="Center" FontFamily="Segoe Fluent Icons" Foreground="{DynamicResource PrimaryBrush}" Text="&#xe73e;" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Checkmark" Property="Opacity" Value="1"/>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                            <Setter TargetName="Checkmark" Property="Foreground" Value="{DynamicResource SecondaryBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Checkmark" Property="Opacity" Value="1"/>
                            <Setter TargetName="IndicatorBorder" Property="Opacity" Value="0"/>
                            <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Checkmark" Property="Opacity" Value="0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Checkmark" Property="Opacity" Value="1"/>
                            <Setter TargetName="Checkmark" Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualStyle}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Content" Value=""/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Border Width="{TemplateBinding Height}" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="5">
                            <TextBlock Opacity="0" x:Name="Checkmark" Padding="0,0,0,0" FontWeight="UltraBold" FontSize="14" TextAlignment="Center" FontFamily="Segoe Fluent Icons" Foreground="{DynamicResource PrimaryBrush}" Text="&#xe73e;" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="60,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" Value="{DynamicResource IndicatorBrush}"/>
                            <Setter TargetName="Checkmark" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Checkmark" Property="Opacity" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                            <Setter TargetName="Checkmark" Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <ControlTemplate x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Border
              x:Name="Border" 
              Grid.ColumnSpan="2"
              CornerRadius="5"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"/>
            <Border
                Opacity="0"
              x:Name="IndicatorBorder" 
              Grid.ColumnSpan="2"
              CornerRadius="5"
              Background="Transparent"
              BorderBrush="{DynamicResource IndicatorBrush}"
              BorderThickness="2"/>
            <Path 
              x:Name="Arrow"
              Margin="0 0 5 0"
              Grid.Column="1"     
              Fill="{DynamicResource BorderBrush}"
              Width="10" Height="6"
              Stretch="Fill"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Data="M7 10l5 5 5-5z">
            </Path>
            <Path 
              x:Name="ArrowMouseOver"
              Margin="0 0 5 0"
              Grid.Column="1"     
              Fill="{DynamicResource GrayBrush}"
              Width="10" Height="6"
              Stretch="Fill"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Data="M7 10l5 5 5-5z" Opacity="0.0">
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="BorderThickness" Value="1"/>
                    <Condition Property="ToggleButton.IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="1.0" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="0.0" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>


            <!--<Setter TargetName="Border" Property="CornerRadius" Value="5 5 0 0"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="Container" AccelerationRatio="0.4" DecelerationRatio="0.4">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OutsideBorder" Storyboard.TargetProperty="(Border.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:0.15" Value="400"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard AccelerationRatio="0.4" DecelerationRatio="0.4">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OutsideBorder" Storyboard.TargetProperty="(Border.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:0.1" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>-->
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ArrowMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ArrowMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <!--<Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="Container" AccelerationRatio="0.4" DecelerationRatio="0.4">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill.Color">
                                <SplineColorKeyFrame KeyTime="00:00:0.25" Value="{DynamicResource GrayBrushColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard AccelerationRatio="0.4" DecelerationRatio="0.4">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill.Color">
                                <SplineColorKeyFrame KeyTime="00:00:0.25" Value="{DynamicResource BorderBrushColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>-->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="IsEditable" Value="False"/>
        <Setter Property="IsTextSearchEnabled" Value="False"/>
        <Setter Property="MaxDropDownHeight" Value="300"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
        <Setter Property="StaysOpenOnEdit" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
                        Name="ToggleButton" 
                        Style="{x:Null}"
                        Template="{StaticResource ToggleButtonStyle}" 
                        Grid.Column="2" 
                        Focusable="false"
                        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                        ClickMode="Press" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        </ToggleButton>
                        <ContentPresenter
                        Name="ContentSite"
                        IsHitTestVisible="False" 
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        Margin="10,3,25,3"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                        Style="{x:Null}" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Center" 
                        Margin="10,0,25,0"
                        Focusable="True" 
                        Background="Transparent"
                        Visibility="Hidden"
                        BorderThickness="0"
                        Padding="0"
                        IsReadOnly="{TemplateBinding IsReadOnly}" CaretBrush="{TemplateBinding Foreground}" Foreground="{TemplateBinding Foreground}"/>
                        <Popup 
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True" 
                        Focusable="False"
                        PopupAnimation="Slide">
                            <Grid 
                            Name="DropDown"
                            SnapsToDevicePixels="True"                
                            MinWidth="{TemplateBinding ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{TemplateBinding Background}" CornerRadius="5" Margin="15" SnapsToDevicePixels="True" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <ScrollViewer Margin="5" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained">
                                        </StackPanel>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}" x:Key="DropDownTextBox">
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="IsTextSearchEnabled" Value="False"/>
        <Setter Property="MaxDropDownHeight" Value="300"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="StaysOpenOnEdit" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualStyle}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Border Opacity="0" x:Name="IndicatorBorder" Background="Transparent" CornerRadius="5" BorderThickness="2" BorderBrush="{DynamicResource IndicatorBrush}"/>
                        <TextBox x:Name="PART_EditableTextBox"
                        Style="{x:Null}" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Center" 
                        Margin="0"
                        Focusable="True" 
                        Background="Transparent"
                        BorderThickness="0"
                        Padding="0"
                        IsReadOnly="{TemplateBinding IsReadOnly}" CaretBrush="{TemplateBinding Foreground}" Foreground="{TemplateBinding Foreground}">
                            <TextBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Undo" Command="ApplicationCommands.Undo"/>
                                    <MenuItem Header="Redo" Command="ApplicationCommands.Redo"/>
                                    <Separator/>
                                    <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
                                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                                    <Separator/>
                                    <MenuItem Header="Select All" Command="ApplicationCommands.SelectAll"/>
                                </ContextMenu>
                            </TextBox.ContextMenu>
                        </TextBox>
                        <Popup 
                        x:Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True" 
                        Focusable="False"
                        PopupAnimation="Slide">
                            <Grid 
                            Name="DropDown"
                            SnapsToDevicePixels="True"
                            Width="{TemplateBinding ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{DynamicResource PrimaryBrush}" CornerRadius="5" Margin="15" SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}">
                                    <ScrollViewer Margin="5" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained">
                                        </StackPanel>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="BorderThickness" Value="1"/>
                                <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" x:Name="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                          Padding="10,0"
                          CornerRadius="5"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true" BorderThickness="1" BorderBrush="Transparent">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Cursor" Value="No"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource FontBrush}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Undo" Command="ApplicationCommands.Undo"/>
                    <MenuItem Header="Redo" Command="ApplicationCommands.Redo"/>
                    <Separator/>
                    <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                    <Separator/>
                    <MenuItem Header="Select All" Command="ApplicationCommands.SelectAll"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="IndicatorBorder" Opacity="0" CornerRadius="5" Background="Transparent" BorderBrush="{DynamicResource IndicatorBrush}" BorderThickness="2"/>
                        <ScrollViewer x:Name="PART_ContentHost" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         HorizontalAlignment="Stretch"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Margin="{TemplateBinding Padding}"/>
                        <TextBlock IsHitTestVisible="False"
                                      Text="Enter"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="5,0,0,0"
                                      FontSize="{TemplateBinding FontSize}"
                                      Foreground="{DynamicResource BorderBrush}"
                                      x:Name="Placeholder"
                                      Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Cursor" Value="IBeam"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="BorderThickness" Value="1"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Placeholder" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="Cursor" Value="No"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource FontBrush}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Undo" Command="ApplicationCommands.Undo"/>
                    <MenuItem Header="Redo" Command="ApplicationCommands.Redo"/>
                    <Separator/>
                    <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                    <Separator/>
                    <MenuItem Header="Select All" Command="ApplicationCommands.SelectAll"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Grid>
                        <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="IndicatorBorder" Opacity="0" CornerRadius="5" Background="Transparent" BorderBrush="{DynamicResource IndicatorBrush}" BorderThickness="2"/>
                        <ScrollViewer x:Name="PART_ContentHost" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         HorizontalAlignment="Stretch"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Margin="{TemplateBinding Padding}"/>
                        <TextBlock IsHitTestVisible="False"
                                      Text="Enter"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="5,0,0,0"
                                      FontSize="{TemplateBinding FontSize}"
                                      Foreground="{DynamicResource BorderBrush}"
                                      x:Name="Placeholder"
                                      Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Cursor" Value="IBeam"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="BorderThickness" Value="1"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Cursor" Value="No"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource FontBrush}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Undo" Command="ApplicationCommands.Undo"/>
                    <MenuItem Header="Redo" Command="ApplicationCommands.Redo"/>
                    <Separator/>
                    <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                    <Separator/>
                    <MenuItem Header="Select All" Command="ApplicationCommands.SelectAll"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="IndicatorBorder" Opacity="0" CornerRadius="5" Background="Transparent" BorderBrush="{DynamicResource IndicatorBrush}" BorderThickness="2"/>
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         HorizontalAlignment="Stretch"
VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
Margin="{TemplateBinding Padding}"/>
                        <TextBlock IsHitTestVisible="False"
                                      Text="Enter"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="5,0,0,0"
                                      FontSize="{TemplateBinding FontSize}"
                                      Foreground="{DynamicResource BorderBrush}"
                                      x:Name="Placeholder"
                                      Visibility="Collapsed">
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Cursor" Value="IBeam"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="BorderThickness" Value="1"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndicatorBorder" Duration="0:0:0.125" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Placeholder" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="2" BorderBrush="{DynamicResource IndicatorBrush}" CornerRadius="5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualStyle}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="BackgroundNormal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}"/>
                        <Border x:Name="BackgroundMouseOver" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{DynamicResource SecondaryBrush}" Opacity="0.0"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}" x:Name="myContentPresenter" Content="{TemplateBinding Content}" TextBlock.TextAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                        <!--<TextBlock Padding="{TemplateBinding Padding}" TextAlignment="{TemplateBinding HorizontalContentAlignment}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundMouseOver" Property="Opacity" Value="0.0"/>
                            <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="IconButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="UltraLight"/>
        <Setter Property="FontFamily" Value="Segoe Fluent Icons"/>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="TabIconButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="UltraLight"/>
        <Setter Property="FontFamily" Value="Segoe Fluent Icons"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="BackgroundNormal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}"/>
                        <Border x:Name="BackgroundMouseOver" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{DynamicResource BorderBrush}" Opacity="0.0"/>
                        <TextBlock x:Name="Text" Padding="{TemplateBinding Padding}" TextAlignment="{TemplateBinding HorizontalContentAlignment}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush}"/>
                            <Setter TargetName="BackgroundNormal" Property="BorderBrush" Value="{DynamicResource GrayBrush}"/>
                            <Setter TargetName="BackgroundMouseOver" Property="BorderBrush" Value="{DynamicResource GrayBrush}"/>
                            <Setter TargetName="Text" Property="Foreground" Value="{DynamicResource FontBrush}"/>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundMouseOver" Property="Opacity" Value="0.0"/>
                            <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="HyperlinkButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Foreground" Value="{DynamicResource IndicatorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="BackgroundNormal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}"/>
                        <Border x:Name="BackgroundMouseOver" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{DynamicResource SecondaryBrush}" Opacity="0.0"/>
                        <DockPanel Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                            <TextBlock Foreground="{TemplateBinding Foreground}" Text="&#xe71b;" Margin="0,0,5,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Segoe Fluent Icons" FontSize="16"/>
                            <TextBlock x:Name="Text" TextAlignment="{TemplateBinding HorizontalContentAlignment}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundMouseOver" Property="Opacity" Value="0.0"/>
                            <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type WinUI:DropDownButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualStyle}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type WinUI:DropDownButton}">
                    <Grid>
                        <Border x:Name="BackgroundNormal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}"/>
                        <Border x:Name="BackgroundMouseOver" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{DynamicResource SecondaryBrush}" Opacity="0.0"/>
                        <TextBlock Margin="{TemplateBinding Padding}" TextAlignment="{TemplateBinding HorizontalContentAlignment}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundMouseOver" Property="Opacity" Value="0.0"/>
                            <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type WinUI:DropDownButton}" x:Key="DropDownIconButton" BasedOn="{StaticResource {x:Type WinUI:DropDownButton}}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type WinUI:DropDownButton}">
                    <Grid>
                        <Border x:Name="BackgroundNormal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}"/>
                        <Border x:Name="BackgroundMouseOver" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{DynamicResource SecondaryBrush}" Opacity="0.0"/>
                        <TextBlock TextAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="18" Text="{TemplateBinding Content}" FontWeight="UltraLight" Margin="{TemplateBinding Padding}" FontFamily="Segoe Fluent Icons" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundMouseOver" Property="Opacity" Value="0.0"/>
                            <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="Placement" Value="Bottom"/>
        <Setter Property="FontFamily" Value="None"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Padding" Value="7.5"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <StackPanel>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="5">
                            <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.FontWeight="Normal" TextBlock.TextAlignment="Center" TextBlock.FontSize="12" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>


    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource IndicatorBrush}"/>
        <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="5"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                           Storyboard.TargetName="PART_Indicator"
                                                                           Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Track" SnapsToDevicePixels="True" CornerRadius="2.5" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>

                        <Border x:Name="PART_Indicator" SnapsToDevicePixels="True" CornerRadius="2.5" HorizontalAlignment="Left" Background="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}" x:Key="ScrollableContextMenu" BasedOn="{StaticResource {x:Type ContextMenu}}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="5">
                        <ScrollViewer CanContentScroll="True" Style="{DynamicResource MenuScrollViewer}" VerticalScrollBarVisibility="Auto">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="5"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuScrollButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                        <ContentPresenter x:Name="ContentContainer" Margin="5,5,5,5" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton
                          Style="{StaticResource MenuScrollButton}"
                          Grid.Row="0"
                          Grid.Column="0"
                          Command="{x:Static ScrollBar.LineUpCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          Margin="5,5,5,0"
                          Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource BorderBrush}" Data="{StaticResource UpArrow}"/>
                        </RepeatButton>
                        <RepeatButton
                          Style="{StaticResource MenuScrollButton}"
                          Grid.Row="2"
                          Grid.Column="0"
                          Command="{x:Static ScrollBar.LineDownCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          Margin="5,0,5,5"
                          Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource BorderBrush}" Data="{StaticResource DownArrow}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="5,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid>
                <ContentPresenter 
          Margin="6,3,6,3" 
          ContentSource="Header"
          RecognizesAccessKey="True"/>
                <Popup 
          Name="Popup"
          Placement="Bottom"
          IsOpen="{TemplateBinding IsSubmenuOpen}"
          AllowsTransparency="True" 
          Focusable="False"
          PopupAnimation="Fade" VerticalOffset="2.5">
                    <Border 
            Name="SubmenuBorder"
            SnapsToDevicePixels="True"
            Background="{DynamicResource PrimaryBrush}"
            BorderBrush="{DynamicResource BorderBrush}"
            BorderThickness="1" CornerRadius="5">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}" Padding="0" Margin="5">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource BorderBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <!--Snippettoplevelheader-->
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="5"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0"/>
            </Trigger>
            <!--/Snippettoplevelheader-->
            <!--<Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="IconMenu" TargetType="{x:Type MenuItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid>
                        <Grid>
                            <Border x:Name="BackgroundNormal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="5" Background="{TemplateBinding Background}"/>
                            <Border x:Name="BackgroundMouseOver" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="5" Background="{DynamicResource SecondaryBrush}" Opacity="0.0"/>
                            <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.FontSize="18" TextBlock.FontWeight="UltraLight" VerticalAlignment="Center" TextBlock.TextAlignment="Center" HorizontalAlignment="Center" ContentSource="Icon" TextBlock.FontFamily="Segoe Fluent Icons"/>
                        </Grid>
                        <Popup 
          Name="Popup"
          Placement="Bottom"
          IsOpen="{TemplateBinding IsSubmenuOpen}"
          AllowsTransparency="True" 
          Focusable="False"
          PopupAnimation="Fade">
                            <Border 
            Name="SubmenuBorder"
            SnapsToDevicePixels="True"
            Background="{DynamicResource PrimaryBrush}"
            BorderBrush="{DynamicResource BorderBrush}"
            BorderThickness="1" CornerRadius="5">
                                <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}" Padding="0" Margin="5">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsSubmenuOpen" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="BackgroundMouseOver" Property="Opacity" Value="1.0"/>
                            <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                            <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="5"/>
                            <Setter TargetName="SubmenuBorder" Property="Padding" Value="0"/>
                        </Trigger>
                        <!--/Snippettoplevelheader-->
                        <!--<Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- TopLevelItem -->
    <ControlTemplate 
    x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
    TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid>
                <ContentPresenter 
          Margin="6,3,6,3" 
          ContentSource="Header"
          RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource BorderBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <!--<Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate 
    x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
    TargetType="{x:Type MenuItem}">
        <Border Name="Border" CornerRadius="5" Margin="0" Height="35" BorderThickness="1" BorderBrush="Transparent">
            <Grid Margin="0,1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="Icon" Width="30" Height="30" Visibility="Visible" Margin="5,0" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" CornerRadius="5" VerticalAlignment="Center">
                    <ContentPresenter Margin="0" TextBlock.FontSize="18" TextBlock.FontWeight="UltraLight" VerticalAlignment="Center" TextBlock.TextAlignment="Center" HorizontalAlignment="Center" ContentSource="Icon" TextBlock.FontFamily="Segoe Fluent Icons">
                        <ContentPresenter.Resources>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </Border>
                <Border Name="Check" Width="20" Height="20" Visibility="Collapsed" VerticalAlignment="Center" Margin="5,0" Background="{DynamicResource PrimaryBrush}" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" CornerRadius="5">
                    <TextBlock Opacity="1" x:Name="Checkmark" Padding="0" FontWeight="UltraBold" FontSize="14" TextAlignment="Center" FontFamily="Segoe Fluent Icons" Foreground="{DynamicResource PrimaryBrush}" Text="&#xe73e;" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
                <ContentPresenter 
          Name="HeaderHost"
          Grid.Column="1"
          ContentSource="Header"
          RecognizesAccessKey="True" VerticalAlignment="Center" TextBlock.Foreground="{TemplateBinding Foreground}">
                    <ContentPresenter.Resources>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <TextBlock x:Name="InputGestureText"
          Grid.Column="2"
          Text="{TemplateBinding InputGestureText}"
          Margin="5,2,0,2"
          DockPanel.Dock="Right" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Header" Value="Snip">
                <Setter Property="Icon" Value="&#xe924;"/>
            </Trigger>

            <Trigger Property="Header" Value="Copy image">
                <Setter Property="Icon" Value="&#xe8b9;"/>
            </Trigger>

            <Trigger Property="Header" Value="Emoji">
                <Setter Property="Icon" Value="&#xe76e;"/>
            </Trigger>
            <Trigger Property="Header" Value="Undo">
                <Setter Property="Icon" Value="&#xe7a7;"/>
            </Trigger>
            <Trigger Property="Header" Value="Redo">
                <Setter Property="Icon" Value="&#xe7a6;"/>
            </Trigger>
            <Trigger Property="Header" Value="Cut">
                <Setter Property="Icon" Value="&#xe8c6;"/>
            </Trigger>
            <Trigger Property="Header" Value="Copy">
                <Setter Property="Icon" Value="&#xe8c8;"/>
            </Trigger>
            <Trigger Property="Header" Value="Paste">
                <Setter Property="Icon" Value="&#xe77f;"/>
            </Trigger>
            <Trigger Property="Header" Value="Delete">
                <Setter Property="Icon" Value="&#xe74d;"/>
            </Trigger>
            <Trigger Property="Header" Value="Select All">
                <Setter Property="Icon" Value="&#xe8b3;"/>
            </Trigger>

            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="Icon" Value="None">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Check" Property="BorderThickness" Value="0"/>
                <Setter TargetName="Check" Property="Background" Value="{DynamicResource IndicatorBrush}"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Checkmark" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="Checkmark" Property="Opacity" Value="0"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                <Setter TargetName="Icon" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Check" Property="BorderThickness" Value="1"/>
                <Setter TargetName="Check" Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                <Setter TargetName="Checkmark" Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                <Setter TargetName="InputGestureText" Property="Foreground" Value="{DynamicResource BorderBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->
    <ControlTemplate 
    x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
    TargetType="{x:Type MenuItem}">
        <Border Name="Border" CornerRadius="5" Margin="0" Height="35" BorderThickness="1" BorderBrush="Transparent">
            <Grid Margin="0,1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="Icon" Width="30" Height="30" Visibility="Visible" Margin="5,0" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" CornerRadius="5">
                    <ContentPresenter Margin="0" TextBlock.FontSize="18" TextBlock.FontWeight="UltraLight" VerticalAlignment="Center" TextBlock.TextAlignment="Center" HorizontalAlignment="Center" ContentSource="Icon" TextBlock.FontFamily="Segoe Fluent Icons"/>
                </Border>
                <ContentPresenter 
          Name="HeaderHost"
          Grid.Column="1"
          ContentSource="Header"
          RecognizesAccessKey="True" VerticalAlignment="Center" Margin="0,2.5,50,2.5" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                <TextBlock x:Name="InputGestureText"
          Grid.Column="2"
          Text="{TemplateBinding InputGestureText}"
          Margin="5,2,2,2"
          DockPanel.Dock="Right" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush}"/>
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{DynamicResource BorderBrush}" x:Name="Arrow"/>
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{DynamicResource GrayBrush}" x:Name="ArrowHighlight" Opacity="0.0"/>
                <Popup 
          Name="Popup"
          Placement="Right"
          VerticalOffset="-6"
          HorizontalOffset="0" 
          IsOpen="{TemplateBinding IsSubmenuOpen}"
          AllowsTransparency="True" 
          Focusable="False"
          PopupAnimation="Fade" Margin="0">
                    <Border 
            Name="SubmenuBorder"
            SnapsToDevicePixels="True"
            Background="{DynamicResource PrimaryBrush}"
            BorderBrush="{DynamicResource BorderBrush}"
            BorderThickness="1" Padding="0">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}" Margin="5" Padding="0">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Header" Value="Zoom">
                <Setter Property="Icon" Value="&#xe71e;"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="Icon" Value="None">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                <Setter TargetName="Icon" Property="BorderBrush" Value="Transparent"/>


                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ArrowHighlight" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ArrowHighlight" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="5"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                <Setter TargetName="InputGestureText" Property="Foreground" Value="{DynamicResource BorderBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"/>
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Row="0" Grid.Column="1"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Grid.Column="0"
                     Value="{TemplateBinding HorizontalOffset}"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarTrackThumb"
    TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent"/>
                        <Border x:Name="CornerScrollBarRectangle"
                        CornerRadius="3.75"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Width="Auto"
                        Height="Auto"
                        Margin="0,5"
                        Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag"
                            Value="Horizontal">
                            <Setter TargetName="CornerScrollBarRectangle"
                            Property="Width"
                            Value="Auto" />
                            <Setter TargetName="CornerScrollBarRectangle"
                            Property="Height"
                            Value="7.5"/>
                            <Setter TargetName="CornerScrollBarRectangle"
                            Property="Margin"
                            Value="5,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="7.5"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot"
                    Width="{TemplateBinding Width}"
                    Height="{TemplateBinding Height}"
                    Background="{TemplateBinding Background}">
                        <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollBarTrackThumb}" Height="Auto" Width="Auto"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp"
                                        Command="ScrollBar.PageDownCommand"
                                        Opacity="0"
                                        Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown"
                                        Command="ScrollBar.PageUpCommand"
                                        Opacity="0"
                                        Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb"
                            Property="IsMouseOver"
                            Value="true">
                            <Setter Value="{DynamicResource PrimaryBrush}"
                            TargetName="Thumb"
                            Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb"
                            Property="IsDragging"
                            Value="true">
                            <Setter Value="{DynamicResource PrimaryBrush}"
                            TargetName="Thumb"
                            Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled"
                            Value="false">
                            <Setter TargetName="Thumb"
                            Property="Visibility"
                            Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <!--<Setter TargetName="GridRoot"
                            Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track"
                            Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>-->
                            <Setter Property="Width"
                            Value="Auto"/>
                            <Setter Property="Height"
                            Value="10"/>
                            <Setter TargetName="Thumb"
                            Property="Tag"
                            Value="Horizontal" />
                            <Setter TargetName="PageDown"
                            Property="Command"
                            Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp"
                            Property="Command"
                            Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="Background" Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Background="{StaticResource PrimaryBrush}" CornerRadius="5,5,0,0" SnapsToDevicePixels="True">
                                <Label SnapsToDevicePixels="True" Grid.Row="0" Foreground="{TemplateBinding Foreground}" Width="Auto" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                    <ContentPresenter SnapsToDevicePixels="True" Margin="5" ContentSource="Header" RecognizesAccessKey="True" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                                </Label>
                            </Border>
                            <ContentPresenter Grid.Row="1" Margin="10" SnapsToDevicePixels="True"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Header" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GroupBox">
                            <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter Grid.Row="1" Margin="10" SnapsToDevicePixels="True"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

















    <Style TargetType="{x:Type Button}" x:Key="ToolBarIconButton" BasedOn="{StaticResource IconButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="BackgroundNormal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}"/>
                        <Border x:Name="BackgroundMouseOver" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{DynamicResource SecondaryBrush}" Opacity="0.0"/>
                        <TextBlock Padding="{TemplateBinding Padding}" TextAlignment="{TemplateBinding HorizontalContentAlignment}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackgroundMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundMouseOver" Property="Opacity" Value="0.0"/>
                            <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type WinUI:WinUITabControl}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="true" ClipToBounds="true">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition2" Height="*"/>
                        </Grid.RowDefinitions>
                        <WinUI:TabPanel Margin="5" x:Name="HeaderPanel" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Row="0" IsItemsHost="true" Background="Transparent"/>
                        <Border Margin="0" x:Name="ContentPanel" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
									KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" Grid.Row="2">
                            <ContentPresenter x:Name="PART_SelectedContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type WinUI:WinUITabControl}" x:Key="VerticalTabControl">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="TabStripPlacement" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <TabPanel Grid.Column="0" Panel.ZIndex="1" Margin="5" IsItemsHost="True" Background="Transparent"/>
                        </ScrollViewer>

                        <Border Margin="0" Grid.Column="1" Background="{TemplateBinding Background}" BorderThickness="1,0,0,0" BorderBrush="{DynamicResource BorderBrush}" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                            <ScrollViewer VerticalScrollBarVisibility="Hidden">
                                <ContentPresenter ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource VerticalTab}"/>
            <Style TargetType="{x:Type TabItem}" x:Key="IconTabButton" BasedOn="{StaticResource VerticalIconTabButton}"/>
        </Style.Resources>
    </Style>

    <ContextMenu x:Key="TabItemContextMenu">
        <!--"&#xE737;"-->
        <MenuItem Icon="&#xEC6C;" Click="ButtonAction" Header="New Tab" Tag="5&lt;,&gt;{Homepage}"/>
        <!--<MenuItem Icon="&#xEC6C;" Click="ButtonAction" Header="Duplicate Tab" Tag="5&lt;,&gt;{CurrentUrl}&lt;,&gt;CurrentIndex"/>-->
        <MenuItem Icon="&#xEC6C;" Click="ButtonAction" Header="Duplicate Tab" Tag="{Binding DuplicateCommand}"/>
        <Separator/>
        <MenuItem Icon="&#xe72c;" Visibility="{Binding BrowserCommandsVisibility}" Click="ButtonAction" Header="Refresh" Tag="{Binding RefreshCommand}"/>
        <MenuItem Icon="&#xec0a;" Visibility="{Binding BrowserCommandsVisibility}" Click="ButtonAction" Header="Unload" Tag="{Binding UnloadCommand}"/>
        <!--<MenuItem Icon="&#xf78a;" Header="Duplicate"/>-->
        <!--<MenuItem Icon="&#xe718;" Header="Pin"/>-->
        <!--<MenuItem Icon="&#xe72d;" Header="Share"/>-->
        <!--<MenuItem Icon="&#xec0a;" Visibility="{Binding BrowserCommandsVisibility}" Click="ButtonAction" Header="Force unload" Tag="{Binding ForceUnloadCommand}"/>-->
        <Separator Visibility="{Binding BrowserCommandsVisibility}"/>
        <!--<MenuItem Icon="&#xE767;" Visibility="{Binding BrowserCommandsVisibility}" Click="ButtonAction" Header="{Binding MuteCommandHeader}" Tag="{Binding MuteCommand}"/>-->
        <MenuItem Icon="&#xEB51;" Visibility="{Binding BrowserCommandsVisibility}" Click="ButtonAction" Header="{Binding FavouriteCommandHeader}" Tag="{Binding AddToFavouritesCommand}"/>
        <Separator Visibility="{Binding BrowserCommandsVisibility}"/>
        <MenuItem Click="ButtonAction" Header="Close Tab" Tag="{Binding CloseCommand}"/>
    </ContextMenu>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="ContextMenu" Value="{StaticResource TabItemContextMenu}"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MaxWidth" Value="240"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>

        <Setter Property="Header" Value="{Binding Header}"/>
        <Setter Property="ToolTip" Value="{Binding Header}"/>
        <Setter Property="Tag" Value="{Binding ID}"/>
        <Setter Property="AllowDrop" Value="True"/>
        <EventSetter Event="PreviewMouseMove" Handler="TabItem_PreviewMouseMove"/>
        <EventSetter Event="Drop" Handler="TabItem_Drop"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border Opacity="0" Name="BorderMouseOver" Background="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,5,0"/>
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,5,0"/>
                        <Border Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,5,0">
                            <!--<DockPanel VerticalAlignment="Center" HorizontalAlignment="Stretch" Width="Auto" Margin="7.5,5" LastChildFill="False">
                                <StackPanel VerticalAlignment="Center" Orientation="Horizontal" DockPanel.Dock="Left">
                                    <Image VerticalAlignment="Center" HorizontalAlignment="Center" Height="20" Width="20">
                                        <Image.Source>
                                            <BitmapImage DecodePixelWidth="50" UriSource="https://weblog.west-wind.com/images/rick175x175.jpg" />
                                        </Image.Source>
                                    </Image>
                                    <ContentPresenter HorizontalAlignment="Stretch" x:Name="ContentSite" Width="Auto" TextBlock.TextAlignment="Center" VerticalAlignment="Center" ContentSource="Header" Margin="7.5,0">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </StackPanel>
                                <Button x:Name="CloseButton" DockPanel.Dock="Right" FontSize="10" BorderThickness="0" Padding="1,0,0,0" Background="Transparent" Foreground="{DynamicResource GrayBrush}" Style="{DynamicResource IconButton}" Width="20" Height="20" VerticalAlignment="Center" Content="&#xE8BB;"/>
                            </DockPanel>-->
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" Width="Auto" Margin="5,5" MaxWidth="{TemplateBinding Width}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" DockPanel.Dock="Left">
                                    <Image RenderOptions.BitmapScalingMode="Fant" ImageFailed="TabIcon_ImageFailed" VerticalAlignment="Center" HorizontalAlignment="Left" Height="20" Width="20" Margin="1.5,0,0,0" Stretch="Uniform" Source="{Binding Icon}" Tag="{Binding ID}" x:Name="Icon"/>
                                    <!--<Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing>
                                                        <GeometryDrawing.Brush>
                                                            <VisualBrush Stretch="Uniform">
                                                                <VisualBrush.Visual>
                                                                    <TextBlock FontFamily="Segoe Fluent Icons" Text="&#xec6c;"/>
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </GeometryDrawing.Brush>
                                                        <GeometryDrawing.Geometry>
                                                            <RectangleGeometry Rect="0,0,20,20"/>
                                                        </GeometryDrawing.Geometry>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>-->
                                    <!--<BitmapImage DecodePixelWidth="50" UriSource="https://weblog.west-wind.com/images/rick175x175.jpg"/>-->
                                    <!--</Image.Source>
                                    </Image>-->
                                    <ContentPresenter HorizontalAlignment="Stretch" Width="{TemplateBinding MaxWidth}" x:Name="ContentSite" TextBlock.TextAlignment="Left" VerticalAlignment="Center" ContentSource="Header" Margin="7.5,0">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </DockPanel>
                                <Button Click="ButtonAction" BorderBrush="{TemplateBinding BorderBrush}" Tag="{Binding CloseCommand}" ToolTip="Close Tab" Visibility="Visible" Grid.Column="1" x:Name="CloseButton" DockPanel.Dock="Right" Margin="0,0,1.5,0" FontSize="10" BorderThickness="1" Padding="1.5,1.5,0,0" Background="Transparent" Foreground="{DynamicResource GrayBrush}" Style="{DynamicResource TabIconButton}" Width="20" Height="20" VerticalAlignment="Center" Content="&#xE8BB;"/>
                            </Grid>
                        </Border>
                        <ProgressBar x:Name="UnloadProgress" Visibility="{Binding ProgressBarVisibility}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Width="Auto" Margin="5,0,10,3.5" Value="{Binding Progress}" Height="2" Foreground="#3AE872" Background="{DynamicResource BorderBrush}" BorderBrush="{DynamicResource BorderBrush}">
                            <ProgressBar.Style>
                                <Style TargetType="{x:Type ProgressBar}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ProgressBar}">
                                                <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding Width}">
                                                    <Border x:Name="PART_Track" SnapsToDevicePixels="True" CornerRadius="1" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
                                                    <Border x:Name="PART_Indicator" SnapsToDevicePixels="True" CornerRadius="1" HorizontalAlignment="Left" Background="{TemplateBinding Foreground}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ProgressBar.Style>
                        </ProgressBar>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsUnloaded}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsUnloaded}" Value="True"/>
                                <Condition Binding="{Binding DimUnloadedIcon}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Icon" Property="Opacity" Value="0.25" />
                        </MultiDataTrigger>

                        <Trigger Property="ActualWidth" Value="40">
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="UnloadProgress" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible"/>
                            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}" x:Key="IconTabButton">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="MinWidth" Value="35"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border Name="Border" Width="35" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0"/>
                        <Border Opacity="0" Width="35" Name="BorderMouseOver" Background="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0"/>
                        <TextBlock Margin="0" RenderTransformOrigin="0.5,0.5"  FontFamily="Segoe Fluent Icons" TextAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="&#xE8BB;" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.RenderTransform>
                                <RotateTransform Angle="45"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}" x:Key="VerticalTab">
        <Setter Property="ContextMenu" Value="{StaticResource TabItemContextMenu}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="MinWidth" Value="35"/>
        <Setter Property="MaxWidth" Value="240"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>

        <Setter Property="Header" Value="{Binding Header}"/>
        <Setter Property="ToolTip" Value="{Binding Header}"/>
        <Setter Property="Tag" Value="{Binding ID}"/>
        <Setter Property="AllowDrop" Value="True"/>
        <EventSetter Event="PreviewMouseMove" Handler="TabItem_PreviewMouseMove"/>
        <EventSetter Event="Drop" Handler="TabItem_Drop"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border Opacity="0" Name="BorderMouseOver" Background="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,0,5"/>
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,0,5"/>
                        <Border Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,0,5">
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" Width="Auto" Margin="5,5" MaxWidth="{TemplateBinding Width}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" DockPanel.Dock="Left">
                                    <Image RenderOptions.BitmapScalingMode="Fant" ImageFailed="TabIcon_ImageFailed" VerticalAlignment="Center" HorizontalAlignment="Left" Height="20" Width="20" Margin="1.5,0,0,0" Stretch="Uniform" Source="{Binding Icon}" Tag="{Binding ID}" x:Name="Icon"/>
                                    <ContentPresenter HorizontalAlignment="Stretch" Width="{TemplateBinding MaxWidth}" x:Name="ContentSite" TextBlock.TextAlignment="Left" VerticalAlignment="Center" ContentSource="Header" Margin="7.5,0">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </DockPanel>
                                <Button Click="ButtonAction" BorderBrush="{TemplateBinding BorderBrush}" Tag="{Binding CloseCommand}" ToolTip="Close Tab" Visibility="Visible" Grid.Column="1" x:Name="CloseButton" DockPanel.Dock="Right" Margin="0,0,1.5,0" FontSize="10" BorderThickness="1" Padding="1.5,1.5,0,0" Background="Transparent" Foreground="{DynamicResource GrayBrush}" Style="{DynamicResource TabIconButton}" Width="20" Height="20" VerticalAlignment="Center" Content="&#xE8BB;"/>
                            </Grid>
                        </Border>
                        <ProgressBar x:Name="UnloadProgress" Visibility="{Binding ProgressBarVisibility}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Width="Auto" Margin="5,0,5,8.5" Value="{Binding Progress}" Height="2" Foreground="#3AE872" Background="{DynamicResource BorderBrush}" BorderBrush="{DynamicResource BorderBrush}">
                            <ProgressBar.Style>
                                <Style TargetType="{x:Type ProgressBar}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ProgressBar}">
                                                <Grid Height="{TemplateBinding Height}" MinWidth="{TemplateBinding Width}">
                                                    <Border x:Name="PART_Track" SnapsToDevicePixels="True" CornerRadius="1" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
                                                    <Border x:Name="PART_Indicator" SnapsToDevicePixels="True" CornerRadius="1" HorizontalAlignment="Left" Background="{TemplateBinding Foreground}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ProgressBar.Style>
                        </ProgressBar>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsUnloaded}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsUnloaded}" Value="True"/>
                                <Condition Binding="{Binding DimUnloadedIcon}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Icon" Property="Opacity" Value="0.25" />
                        </MultiDataTrigger>

                        <Trigger Property="ActualWidth" Value="35">
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="UnloadProgress" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible"/>
                            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}" x:Key="VerticalIconTabButton" BasedOn="{StaticResource VerticalTab}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Header" Value="New Tab"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border Background="Transparent" BorderThickness="0,1,0,0" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Border Height="35" Opacity="0" Name="BorderMouseOver" Background="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,5,0,5"/>
                        <Border Height="35" Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,5,0,5"/>
                        <Border Height="35" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,5,0,5">
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" Width="Auto" Margin="5,5" MaxWidth="{TemplateBinding Width}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" DockPanel.Dock="Left">
                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Height="20" Width="20" Margin="2,0,0,0">
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing>
                                                        <GeometryDrawing.Brush>
                                                            <VisualBrush Stretch="Uniform">
                                                                <VisualBrush.Visual>
                                                                    <TextBlock FontFamily="Segoe Fluent Icons" Text="&#xE8BB;" RenderTransformOrigin="0.5,0.5">
                                                                        <TextBlock.RenderTransform>
                                                                            <RotateTransform Angle="45"/>
                                                                        </TextBlock.RenderTransform>
                                                                    </TextBlock>
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </GeometryDrawing.Brush>
                                                        <GeometryDrawing.Geometry>
                                                            <RectangleGeometry Rect="0,0,20,20"/>
                                                        </GeometryDrawing.Geometry>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                    </Image>
                                    <ContentPresenter HorizontalAlignment="Stretch" Width="{TemplateBinding MaxWidth}" x:Name="ContentSite" TextBlock.TextAlignment="Left" VerticalAlignment="Center" ContentSource="Header" Margin="7.5,0">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </DockPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ActualWidth" Value="35">
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type WinUI:WinUITabControl}" x:Key="WinUITabControl">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="TabStripPlacement" Value="Left"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <TabPanel Grid.Column="0" Panel.ZIndex="1" Margin="5" IsItemsHost="True" Background="Transparent"/>
                        </ScrollViewer>

                        <Border Margin="0" Grid.Column="1" Background="{TemplateBinding Background}" BorderThickness="1,0,0,0" BorderBrush="{DynamicResource BorderBrush}" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                            <ScrollViewer VerticalScrollBarVisibility="Hidden">
                                <ContentPresenter ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type TabItem}" x:Key="TabSeparator">
                <Setter Property="Height" Value="1"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="IsHitTestVisible" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border Name="Border" Background="{DynamicResource BorderBrush}" Margin="0,0,0,0"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TabItem}" x:Key="ThickTabSeparator">
                <Setter Property="Height" Value="7.5"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="IsHitTestVisible" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border Name="Border" Background="{DynamicResource BorderBrush}" CornerRadius="1.25" Margin="0,0,0,5"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource WinUITabItem}"/>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type TabItem}" x:Key="WinUITabItem">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="MinWidth" Value="35"/>
        <Setter Property="MaxWidth" Value="240"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource IndicatorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border Opacity="0" Name="BorderMouseOver" Background="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,0,5"/>
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,0,5"/>

                        <Border Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,0,5">
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" Width="Auto" Margin="5,5" MaxWidth="{TemplateBinding Width}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" DockPanel.Dock="Left">
                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Height="20" Width="20" Margin="5,0,0,0">
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing>
                                                        <GeometryDrawing.Brush>
                                                            <VisualBrush Stretch="Uniform">
                                                                <VisualBrush.Visual>
                                                                    <TextBlock FontFamily="Segoe Fluent Icons" Text="{TemplateBinding Tag}"/>
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </GeometryDrawing.Brush>
                                                        <GeometryDrawing.Geometry>
                                                            <RectangleGeometry Rect="0,0,20,20"/>
                                                        </GeometryDrawing.Geometry>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                    </Image>
                                    <ContentPresenter HorizontalAlignment="Stretch" Width="{TemplateBinding MaxWidth}" x:Name="ContentSite" TextBlock.TextAlignment="Left" VerticalAlignment="Center" ContentSource="Header" Margin="7.5,0">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </DockPanel>
                            </Grid>
                        </Border>
                        <Border Opacity="0" x:Name="SelectedIndicator" Width="2.5" Height="20" Background="{TemplateBinding BorderBrush}" CornerRadius="1.25" Margin="0,0,0,5" HorizontalAlignment="Left"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>


                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedIndicator" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedIndicator" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}" x:Key="ColoredWinUITabItem" BasedOn="{StaticResource WinUITabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border Opacity="0" Name="BorderMouseOver" Background="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,0,5"/>
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,0,5"/>

                        <Border Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Margin="0,0,0,5">
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" Width="Auto" Margin="5,5" MaxWidth="{TemplateBinding Width}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" DockPanel.Dock="Left">
                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Height="20" Width="20" Margin="5,0,0,0">
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing>
                                                        <GeometryDrawing.Brush>
                                                            <VisualBrush Stretch="Uniform">
                                                                <VisualBrush.Visual>
                                                                    <TextBlock FontFamily="Segoe Fluent Icons" Text="{TemplateBinding Tag}" Foreground="{TemplateBinding BorderBrush}"/>
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </GeometryDrawing.Brush>
                                                        <GeometryDrawing.Geometry>
                                                            <RectangleGeometry Rect="0,0,20,20"/>
                                                        </GeometryDrawing.Geometry>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                    </Image>
                                    <ContentPresenter HorizontalAlignment="Stretch" Width="{TemplateBinding MaxWidth}" x:Name="ContentSite" TextBlock.TextAlignment="Left" VerticalAlignment="Center" ContentSource="Header" Margin="7.5,0">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </DockPanel>
                            </Grid>
                        </Border>
                        <Border Opacity="0" x:Name="SelectedIndicator" Width="2.5" Height="20" Background="{TemplateBinding BorderBrush}" CornerRadius="1.25" Margin="0,0,0,5" HorizontalAlignment="Left"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>


                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedIndicator" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedIndicator" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderMouseOver" Duration="0:0:0.250" To="0.0" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Duration="0:0:0.250" To="1.0" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>